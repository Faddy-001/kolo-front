.clickable_row {
    cursor: pointer;
}

table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0 20px;
    thead {
        background: #a1a1a1;
        th {
            color: #fff;
            font-weight: 300;
            padding: 7px 7px 7px 7px;
        }
    }
    tbody {
        background-color: #fff;
        tr {
            box-shadow: 0px 0px 8px 0px rgb(0 0 0 / 25%);
            cursor: pointer;
            border-radius: 6px 6px 6px 6px;
            td {
                padding: 7px 7px 7px 7px;
            }
        }
    }
}

tfoot,
th:first-child,
thead {
    border-radius: 6px 0px 0px 6px;
}

tfoot,
th:last-child,
tr,
thead {
    border-radius: 0px 6px 6px 0px;
}

// td, th {  min-width: 170px; }
// tr { display: block; }

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
        display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    tr {
        margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
        background: #ccc;
    }

    td {
        /* Behave  like a "row" */
        border: none;
        border-bottom: 1px solid #eee;
        position: relative;
        padding-left: 50% !important;
        padding-top: 7px !important;
        padding-right: 0px !important;
        padding-bottom: 7px !important;
        @media only screen and (max-width: 384px) {
            padding-left: 55% !important;
        }
        @media only screen and (max-width: 340px) {
            padding-left: 60% !important;
        }
        @media only screen and (max-width: 314px) {
            padding-left: 65% !important;
        }
        @media only screen and (max-width: 296px) {
            padding-left: 69% !important;
        }
        @media only screen and (max-width: 242px) {
            padding-left: 78% !important;
        }
    }

    td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        left: 20px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
    }

    /*
      Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
      */

    td:nth-of-type(1):before {
        content: "First Name";
    }
    td:nth-of-type(2):before {
        content: "Email";
    }
    td:nth-of-type(3):before {
        content: "Gender";
    }
    td:nth-of-type(4):before {
        content: "Phone";
    }
    td:nth-of-type(5):before {
        content: "Alternate Phone";
    }
    td:nth-of-type(6):before {
        content: "Project";
    }
    td:nth-of-type(7):before {
        content: "Department";
    }
    td:nth-of-type(8):before {
        content: "Role";
    }
    td:nth-of-type(9):before {
        content: "Password";
    }
    td:nth-of-type(10):before {
        content: "Address";
    }
}

.font_color {
    color: grey;
}
.title {
    text-align: left;
    font-weight: bold;
    color: grey;
}
.line {
    height: 3px;
    background-color: whitesmoke;
    margin-bottom: 5px;
}
.edit-button {
    text-align: right;
    background: transparent;
    border: none;
    color: #35c5be;
    position: relative;
    // bottom: 2rem;
    font-size: 1.2rem;
}

.close-icon {
    position: relative;
    right:0px;
    font-size: 20px;
    cursor: pointer;
    opacity:0.7;
}

@media only screen and (min-width: 200px) and (max-width: 991px) {
   ::ng-deep.mat-dialog-container {
        height: 80vh;
    }
}
